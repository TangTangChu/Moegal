##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	root /var/www/html;

	server_name _;
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		rewrite ^/(static|index\.php)(.*)$ /$1$2 last;  # 排除特定路径	
		rewrite ^(.*)$ /index.php?path=$1&$args last;
	}
	location ^~ /static/ {
    		alias /var/www/html/static/;  
    		try_files $uri =404;  
	}
	location ^~ /uploads/ {
                alias /var/www/html/uploads/;
                try_files $uri =404;
        }
	location ^~ /index.php {
		include snippets/fastcgi-php.conf;
	#	return 403;
		# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.3-fpm.sock;
		# With php-cgi (or other tcp sockets):
		#fastcgi_pass 127.0.0.1:9000;
		}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

